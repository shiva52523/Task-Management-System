/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { createSelector } from '../utils/selector-utils';
/**
 * Decorator for memoizing a state selector.
 * @param {?=} selectors
 * @return {?}
 */
export function Selector(selectors) {
    return (/**
     * @param {?} target
     * @param {?} methodName
     * @param {?} descriptor
     * @return {?}
     */
    (target, methodName, descriptor) => {
        if (descriptor.value !== null) {
            /** @type {?} */
            const originalFn = descriptor.value;
            /** @type {?} */
            const memoizedFn = createSelector(selectors, originalFn.bind(target), { containerClass: target, selectorName: methodName });
            return {
                configurable: true,
                /**
                 * @return {?}
                 */
                get() {
                    return memoizedFn;
                }
            };
        }
        else {
            throw new Error('Selectors only work on methods');
        }
    });
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VsZWN0b3IuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9Abmd4cy9zdG9yZS8iLCJzb3VyY2VzIjpbInNyYy9kZWNvcmF0b3JzL3NlbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7OztBQUt6RCxNQUFNLFVBQVUsUUFBUSxDQUFDLFNBQWlCO0lBQ3hDOzs7Ozs7SUFBTyxDQUFDLE1BQVcsRUFBRSxVQUFrQixFQUFFLFVBQThCLEVBQUUsRUFBRTtRQUN6RSxJQUFJLFVBQVUsQ0FBQyxLQUFLLEtBQUssSUFBSSxFQUFFOztrQkFDdkIsVUFBVSxHQUFHLFVBQVUsQ0FBQyxLQUFLOztrQkFFN0IsVUFBVSxHQUFHLGNBQWMsQ0FDL0IsU0FBUyxFQUNULFVBQVUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQ3ZCLEVBQUUsY0FBYyxFQUFFLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLENBQ3JEO1lBRUQsT0FBTztnQkFDTCxZQUFZLEVBQUUsSUFBSTs7OztnQkFDbEIsR0FBRztvQkFDRCxPQUFPLFVBQVUsQ0FBQztnQkFDcEIsQ0FBQzthQUNGLENBQUM7U0FDSDthQUFNO1lBQ0wsTUFBTSxJQUFJLEtBQUssQ0FBQyxnQ0FBZ0MsQ0FBQyxDQUFDO1NBQ25EO0lBQ0gsQ0FBQyxFQUFDO0FBQ0osQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAnLi4vdXRpbHMvc2VsZWN0b3ItdXRpbHMnO1xyXG5cclxuLyoqXHJcbiAqIERlY29yYXRvciBmb3IgbWVtb2l6aW5nIGEgc3RhdGUgc2VsZWN0b3IuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gU2VsZWN0b3Ioc2VsZWN0b3JzPzogYW55W10pIHtcclxuICByZXR1cm4gKHRhcmdldDogYW55LCBtZXRob2ROYW1lOiBzdHJpbmcsIGRlc2NyaXB0b3I6IFByb3BlcnR5RGVzY3JpcHRvcikgPT4ge1xyXG4gICAgaWYgKGRlc2NyaXB0b3IudmFsdWUgIT09IG51bGwpIHtcclxuICAgICAgY29uc3Qgb3JpZ2luYWxGbiA9IGRlc2NyaXB0b3IudmFsdWU7XHJcblxyXG4gICAgICBjb25zdCBtZW1vaXplZEZuID0gY3JlYXRlU2VsZWN0b3IoXHJcbiAgICAgICAgc2VsZWN0b3JzLFxyXG4gICAgICAgIG9yaWdpbmFsRm4uYmluZCh0YXJnZXQpLFxyXG4gICAgICAgIHsgY29udGFpbmVyQ2xhc3M6IHRhcmdldCwgc2VsZWN0b3JOYW1lOiBtZXRob2ROYW1lIH1cclxuICAgICAgKTtcclxuXHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxyXG4gICAgICAgIGdldCgpIHtcclxuICAgICAgICAgIHJldHVybiBtZW1vaXplZEZuO1xyXG4gICAgICAgIH1cclxuICAgICAgfTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcignU2VsZWN0b3JzIG9ubHkgd29yayBvbiBtZXRob2RzJyk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG4iXX0=