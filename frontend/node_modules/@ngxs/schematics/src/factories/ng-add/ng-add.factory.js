"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const schematics_1 = require("@angular-devkit/schematics");
const lib_config_1 = require("../../utils/common/lib.config");
const tasks_1 = require("@angular-devkit/schematics/tasks");
const dependencies_1 = require("@schematics/angular/utility/dependencies");
function ngAdd(options) {
    return schematics_1.chain([
        addNgxsPackageToPackageJson(),
        setSchematicsAsDefault(),
        finallyLog(),
        options.skipInstall ? schematics_1.noop() : runNpmPackageInstall()
    ]);
}
exports.ngAdd = ngAdd;
function addNgxsPackageToPackageJson() {
    return (host, context) => {
        context.logger.info('Adding npm dependencies');
        lib_config_1.LIB_CONFIG.forEach(({ type, version, name, overwrite }) => {
            dependencies_1.addPackageJsonDependency(host, { type, version, name, overwrite });
            context.logger.log('info', `✅️ Added "${name}" into ${type}`);
        });
        return host;
    };
}
function runNpmPackageInstall() {
    return (_, context) => {
        context.addTask(new tasks_1.NodePackageInstallTask());
        context.logger.log('info', `🔍 Installing packages...`);
    };
}
function setSchematicsAsDefault() {
    return (host, context) => {
        context.logger.info('Adding @ngxs/schematics to angular.json');
        const exec = require('child_process').exec;
        exec('ng config cli.defaultCollection @ngxs/schematics', () => {
            context.logger.log('info', `✅️ Setting NGXS Schematics as default`);
        });
        return host;
    };
}
function finallyLog() {
    return (host, context) => {
        context.logger.log('info', `👏 Create your first ngxs store by using starter kit: ng g ngxs-sk --spec`);
        return host;
    };
}
